prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    ruleSelector:
      matchExpressions:
        # - key: release
        #   operator: In
        #   values: 
        #   - prometheus-operator
        - key: prometheus
          operator: In
          values: 
          - custom-rules


alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: '<>'
    route:
      group_by: ['namespace','job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack-notifications'
      routes:
      - match: 
          alertname: DeadMansSnitch
        receiver: 'null'  
      - match: 
          name: prometheus
        receiver: 'null'  
      - match: 
          receiver: 'slack-notifications'
        continue: true
      # - match_re:
      #     severity: '^(critical|warning)$'
      #   receiver: 'slack-notifications'
    receivers:
    - name: 'null'
    - name: 'slack-notifications'
      slack_configs:
        - channel: 'eng-prometheus-alert'
          send_resolved: true
          title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitor Event Notification'
          text: >-
            {{range .Alerts}}
              *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
              *Description:* {{ .Annotations.description }}
              *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook }}|: |:spiral_note_pad:
              *Details:*
              {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
              {{ end }}
            {{ end }}


    # templates:
    # - '/etc/alertmanager/config/*.tmpl'


